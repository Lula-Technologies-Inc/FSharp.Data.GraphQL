name: publish to GitHub

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set Build Version
      run: |
        $File = (
          Select-Xml -XPath "/Project/PropertyGroup[@Label='NuGet']/Version" -Path "Directory.Build.targets"
        )[0].Node
        $Version = $File.InnerText
        $File.InnerText = "$Version-ci-$env:GITHUB_RUN_ID"
        $File.OwnerDocument.Save((Join-Path $PWD.ProviderPath Directory.Build.targets))
      shell: pwsh
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
    - name: Add the GitHub source
      run: dotnet nuget add source --username USERNAME --password ${{secrets.GITHUB_TOKEN}} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/fsprojects/index.json"

    - name: Install local tools
      run: dotnet tool restore

    - name: Run integration tests
      run: dotnet fsi build.fsx

    - name: Pack FSharp.Data.GraphQL.Shared project
      run: |
        cd src/FSharp.Data.GraphQL.Shared
        dotnet pack --no-build --nologo --configuration Release /p:IsNuget=true -o ../../nuget
    - name: Publish FSharp.Data.GraphQL.Shared project to GitHub
      run: |
        cd src/FSharp.Data.GraphQL.Shared
        dotnet nuget push ../../nuget/*Shared*.nupkg -s "github" -k ${{secrets.GITHUB_TOKEN}}

    - name: Pack FSharp.Data.GraphQL.Client project
      run: |
        cd src/FSharp.Data.GraphQL.Client
        dotnet pack --no-build --nologo --configuration Release /p:IsNuget=true -o ../../nuget
    - name: Publish FSharp.Data.GraphQL.Client project to GitHub
      run: |
        cd src/FSharp.Data.GraphQL.Client
        dotnet nuget push ../../nuget/*Client*.nupkg -s "github" -k ${{secrets.GITHUB_TOKEN}}

    - name: Pack FSharp.Data.GraphQL.Server project
      run: |
        cd src/FSharp.Data.GraphQL.Server
        dotnet pack --no-build --nologo --configuration Release /p:IsNuget=true -o ../../nuget
    - name: Publish FSharp.Data.GraphQL.Server project to GitHub
      run: |
        cd src/FSharp.Data.GraphQL.Server
        dotnet nuget push ../../nuget/*Server*.nupkg -s "github" -k ${{secrets.GITHUB_TOKEN}}

    - name: Pack FSharp.Data.GraphQL.Server.Middleware project
      run: |
        cd src/FSharp.Data.GraphQL.Server.Middleware
        dotnet pack --nologo --configuration Release /p:IsNuget=true -o ../../nuget
    - name: Publish FSharp.Data.GraphQL.Server.Middleware project to GitHub
      run: |
        cd src/FSharp.Data.GraphQL.Server.Middleware
        dotnet nuget push ../../nuget/*Server.Middleware*.nupkg -s "github" -k ${{secrets.GITHUB_TOKEN}}
